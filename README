
# Physics Simulations

A collection of interactive physics simulations with a graphical user interface built using Python's Tkinter and Matplotlib. This project is designed for educational purposes, allowing users to explore and visualize various fundamental physics concepts.

## Features

- **Projectile Motion**: Simulate projectile trajectories with adjustable parameters.
- **Snap Line Tool**: Interactive line drawing tool with snapping and trimming features, useful for analyzing curves.
- **Simple Harmonic Motion (SHO)**: Simulate a mass-spring system with energy visualization.
- **Elastic Collisions**: Study conservation of energy and momentum in elastic collisions.
- **Atwood's Machine**: Simulate two masses connected by a string over a pulley.
- **Rigid Body Rotation**: Study rotational motion of different objects with variable mass distribution.

## Screenshots

*(Add screenshots of your main menu and a few simulations here for better presentation.)*

## Installation

1. **Clone the repository:**
   ```bash
   git clone <your-repo-url>
   cd <your-repo-directory>
   ```

2. **Install dependencies:**
   Make sure you have Python 3.8+ installed. Install required packages using pip:
   ```bash
   pip install matplotlib numpy
   ```
   *(Add any other dependencies if your other modules require them.)*

3. **(Optional) Create a virtual environment:**
   ```bash
   python -m venv venv
   source venv/bin/activate  # On Windows: venv\Scripts\activate
   pip install matplotlib numpy
   ```

## Usage

Run the main application:
```bash
python home_screen.py
```

A window will open with buttons for each simulation. Click a button to launch the corresponding simulation. The main menu will hide while the simulation is running and reappear when you close the simulation window.

## Project Structure

- `home_screen.py` — Main menu and GUI launcher for all simulations.
- `projectile_motion.py` — Projectile motion simulation.
- `snap_line.py` — Snap line drawing tool.
- `SHO.py` — Simple Harmonic Motion simulator.
- `elastic_collision.py` — Elastic collision simulation.
- `atwood_machine.py` — Atwood's machine simulation.
- `rigid_body_rotation.py` — Rigid body rotation simulation.

*(Add descriptions for any other files or folders as needed.)*

## Requirements

- Python 3.8 or higher
- Tkinter (usually included with Python)
- Matplotlib
- NumPy

## Contributing

Pull requests are welcome! For major changes, please open an issue first to discuss what you would like to change.

## License

*(Specify your license here, e.g., MIT, GPL, etc.)*
